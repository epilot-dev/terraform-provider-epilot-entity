// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"encoding/json"
	"github.com/epilot-dev/terraform-provider-epilot-entity/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"time"
)

func (r *EntityDataSourceModel) RefreshFromGetResponse(resp *shared.EntityItem) {
	if resp.CreatedAt != nil {
		r.CreatedAt = types.StringValue(resp.CreatedAt.Format(time.RFC3339Nano))
	} else {
		r.CreatedAt = types.StringNull()
	}
	if resp.Entity == nil {
		r.Entity = types.StringNull()
	} else {
		entityResult, _ := json.Marshal(resp.Entity)
		r.Entity = types.StringValue(string(entityResult))
	}
	r.ID = types.StringValue(resp.ID)
	r.Org = types.StringValue(resp.Org)
	r.Schema = types.StringValue(resp.Schema)
	r.Tags = nil
	for _, v := range resp.Tags {
		r.Tags = append(r.Tags, types.StringValue(v))
	}
	if resp.Title != nil {
		r.Title = types.StringValue(*resp.Title)
	} else {
		r.Title = types.StringNull()
	}
	if resp.UpdatedAt != nil {
		r.UpdatedAt = types.StringValue(resp.UpdatedAt.Format(time.RFC3339Nano))
	} else {
		r.UpdatedAt = types.StringNull()
	}
}
