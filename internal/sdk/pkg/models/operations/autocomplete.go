// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"net/http"
)

type AutocompleteRequest struct {
	// Autocomplete attribute
	Attribute string `queryParam:"style=form,explode=true,name=attribute"`
	// Input to autocomplete
	Input *string `queryParam:"style=form,explode=true,name=input"`
	// Maximum number of results to return
	Size *int64 `queryParam:"style=form,explode=true,name=size"`
	// Limit results to entity schema
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
}

type Autocomplete200ApplicationJSONResults3 struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}
type _Autocomplete200ApplicationJSONResults3 Autocomplete200ApplicationJSONResults3

func (c *Autocomplete200ApplicationJSONResults3) UnmarshalJSON(bs []byte) error {
	data := _Autocomplete200ApplicationJSONResults3{}

	if err := json.Unmarshal(bs, &data); err != nil {
		return err
	}
	*c = Autocomplete200ApplicationJSONResults3(data)

	additionalFields := make(map[string]interface{})

	if err := json.Unmarshal(bs, &additionalFields); err != nil {
		return err
	}

	c.AdditionalProperties = additionalFields

	return nil
}

func (c Autocomplete200ApplicationJSONResults3) MarshalJSON() ([]byte, error) {
	out := map[string]interface{}{}
	bs, err := json.Marshal(_Autocomplete200ApplicationJSONResults3(c))
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	bs, err = json.Marshal(c.AdditionalProperties)
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	return json.Marshal(out)
}

// Autocomplete200ApplicationJSON - Success
type Autocomplete200ApplicationJSON struct {
	Hits    *float64      `json:"hits,omitempty"`
	Results []interface{} `json:"results,omitempty"`
}

type AutocompleteResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	Autocomplete200ApplicationJSONObject *Autocomplete200ApplicationJSON
}
