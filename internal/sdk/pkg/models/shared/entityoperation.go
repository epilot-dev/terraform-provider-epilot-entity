// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EntityOperationDiff struct {
	Added   map[string]interface{} `json:"added,omitempty"`
	Deleted map[string]interface{} `json:"deleted,omitempty"`
	Updated map[string]interface{} `json:"updated,omitempty"`
}

type EntityOperationOperationEnum string

const (
	EntityOperationOperationEnumCreateEntity EntityOperationOperationEnum = "createEntity"
	EntityOperationOperationEnumUpdateEntity EntityOperationOperationEnum = "updateEntity"
	EntityOperationOperationEnumDeleteEntity EntityOperationOperationEnum = "deleteEntity"
)

func (e *EntityOperationOperationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "createEntity":
		fallthrough
	case "updateEntity":
		fallthrough
	case "deleteEntity":
		*e = EntityOperationOperationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityOperationOperationEnum: %s", s)
	}
}

type EntityOperationParams struct {
	ID *string `json:"id,omitempty"`
	// URL-friendly identifier for the entity schema
	Slug *string `json:"slug,omitempty"`
}

type EntityOperation struct {
	// See https://github.com/ulid/spec
	ActivityID *string                      `json:"activity_id,omitempty"`
	Diff       *EntityOperationDiff         `json:"diff,omitempty"`
	Entity     string                       `json:"entity"`
	Operation  EntityOperationOperationEnum `json:"operation"`
	Org        string                       `json:"org"`
	Params     *EntityOperationParams       `json:"params,omitempty"`
	Payload    map[string]interface{}       `json:"payload,omitempty"`
}
