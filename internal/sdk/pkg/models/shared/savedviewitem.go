// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
)

type SavedViewItemCreatedBy2Source string

const (
	SavedViewItemCreatedBy2SourceSystem    SavedViewItemCreatedBy2Source = "SYSTEM"
	SavedViewItemCreatedBy2SourceBlueprint SavedViewItemCreatedBy2Source = "BLUEPRINT"
)

func (e SavedViewItemCreatedBy2Source) ToPointer() *SavedViewItemCreatedBy2Source {
	return &e
}

func (e *SavedViewItemCreatedBy2Source) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SYSTEM":
		fallthrough
	case "BLUEPRINT":
		*e = SavedViewItemCreatedBy2Source(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SavedViewItemCreatedBy2Source: %v", v)
	}
}

// SavedViewItemCreatedBy2 - A system-created view
type SavedViewItemCreatedBy2 struct {
	Source *SavedViewItemCreatedBy2Source `json:"source,omitempty"`

	AdditionalProperties interface{} `json:"-"`
}
type _SavedViewItemCreatedBy2 SavedViewItemCreatedBy2

func (c *SavedViewItemCreatedBy2) UnmarshalJSON(bs []byte) error {
	data := _SavedViewItemCreatedBy2{}

	if err := json.Unmarshal(bs, &data); err != nil {
		return err
	}
	*c = SavedViewItemCreatedBy2(data)

	additionalFields := make(map[string]interface{})

	if err := json.Unmarshal(bs, &additionalFields); err != nil {
		return err
	}
	delete(additionalFields, "source")

	c.AdditionalProperties = additionalFields

	return nil
}

func (c SavedViewItemCreatedBy2) MarshalJSON() ([]byte, error) {
	out := map[string]interface{}{}
	bs, err := json.Marshal(_SavedViewItemCreatedBy2(c))
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	bs, err = json.Marshal(c.AdditionalProperties)
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	return json.Marshal(out)
}

// SavedViewItemCreatedBy1 - A user that created the view
type SavedViewItemCreatedBy1 struct {
	UserID *string `json:"user_id,omitempty"`
}

type SavedViewItemCreatedByType string

const (
	SavedViewItemCreatedByTypeSavedViewItemCreatedBy1 SavedViewItemCreatedByType = "SavedViewItem_created_by_1"
	SavedViewItemCreatedByTypeSavedViewItemCreatedBy2 SavedViewItemCreatedByType = "SavedViewItem_created_by_2"
)

type SavedViewItemCreatedBy struct {
	SavedViewItemCreatedBy1 *SavedViewItemCreatedBy1
	SavedViewItemCreatedBy2 *SavedViewItemCreatedBy2

	Type SavedViewItemCreatedByType
}

func CreateSavedViewItemCreatedBySavedViewItemCreatedBy1(savedViewItemCreatedBy1 SavedViewItemCreatedBy1) SavedViewItemCreatedBy {
	typ := SavedViewItemCreatedByTypeSavedViewItemCreatedBy1

	return SavedViewItemCreatedBy{
		SavedViewItemCreatedBy1: &savedViewItemCreatedBy1,
		Type:                    typ,
	}
}

func CreateSavedViewItemCreatedBySavedViewItemCreatedBy2(savedViewItemCreatedBy2 SavedViewItemCreatedBy2) SavedViewItemCreatedBy {
	typ := SavedViewItemCreatedByTypeSavedViewItemCreatedBy2

	return SavedViewItemCreatedBy{
		SavedViewItemCreatedBy2: &savedViewItemCreatedBy2,
		Type:                    typ,
	}
}

func (u *SavedViewItemCreatedBy) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	savedViewItemCreatedBy1 := new(SavedViewItemCreatedBy1)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&savedViewItemCreatedBy1); err == nil {
		u.SavedViewItemCreatedBy1 = savedViewItemCreatedBy1
		u.Type = SavedViewItemCreatedByTypeSavedViewItemCreatedBy1
		return nil
	}

	savedViewItemCreatedBy2 := new(SavedViewItemCreatedBy2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&savedViewItemCreatedBy2); err == nil {
		u.SavedViewItemCreatedBy2 = savedViewItemCreatedBy2
		u.Type = SavedViewItemCreatedByTypeSavedViewItemCreatedBy2
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SavedViewItemCreatedBy) MarshalJSON() ([]byte, error) {
	if u.SavedViewItemCreatedBy1 != nil {
		return json.Marshal(u.SavedViewItemCreatedBy1)
	}

	if u.SavedViewItemCreatedBy2 != nil {
		return json.Marshal(u.SavedViewItemCreatedBy2)
	}

	return nil, nil
}

// SavedViewItem - A saved entity view
type SavedViewItem struct {
	CreatedAt *string                `json:"created_at,omitempty"`
	CreatedBy SavedViewItemCreatedBy `json:"created_by"`
	// Generated uuid for a saved view
	ID *string `json:"id,omitempty"`
	// User-friendly identifier for the saved view
	Name string `json:"name"`
	// Organisation ID a view belongs to
	Org *string `json:"org,omitempty"`
	// boolean property for if a view is shared with organisation
	Shared *bool `json:"shared,omitempty"`
	// list of schemas a view can belong to
	Slug      []string               `json:"slug"`
	UIConfig  map[string]interface{} `json:"ui_config"`
	UpdatedAt *string                `json:"updated_at,omitempty"`
}
