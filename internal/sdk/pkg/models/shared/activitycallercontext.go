// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
)

type ActivityCallerContextEpilotAuthToken struct {
	CognitoUsername *string `json:"cognito:username,omitempty"`
	CustomIvyUserID *string `json:"custom:ivy_user_id,omitempty"`
	Email           *string `json:"email,omitempty"`
	Sub             *string `json:"sub,omitempty"`
}

type ActivityCallerContextEpilotAuth struct {
	Token *ActivityCallerContextEpilotAuthToken `json:"token,omitempty"`
}

type ActivityCallerContext struct {
	EpilotAuth *ActivityCallerContextEpilotAuth `json:"EpilotAuth,omitempty"`

	AdditionalProperties interface{} `json:"-"`
}
type _ActivityCallerContext ActivityCallerContext

func (c *ActivityCallerContext) UnmarshalJSON(bs []byte) error {
	data := _ActivityCallerContext{}

	if err := json.Unmarshal(bs, &data); err != nil {
		return err
	}
	*c = ActivityCallerContext(data)

	additionalFields := make(map[string]interface{})

	if err := json.Unmarshal(bs, &additionalFields); err != nil {
		return err
	}
	delete(additionalFields, "EpilotAuth")

	c.AdditionalProperties = additionalFields

	return nil
}

func (c ActivityCallerContext) MarshalJSON() ([]byte, error) {
	out := map[string]interface{}{}
	bs, err := json.Marshal(_ActivityCallerContext(c))
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	bs, err = json.Marshal(c.AdditionalProperties)
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	return json.Marshal(out)
}
