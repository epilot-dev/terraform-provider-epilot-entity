// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EntityDefaultEditTableMenuOptions struct {
	Icon  *string `json:"icon,omitempty"`
	Label *string `json:"label,omitempty"`
}

func (o *EntityDefaultEditTableMenuOptions) GetIcon() *string {
	if o == nil {
		return nil
	}
	return o.Icon
}

func (o *EntityDefaultEditTableMenuOptions) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

type EntityDefaultEditViewType string

const (
	EntityDefaultEditViewTypeDefault EntityDefaultEditViewType = "default"
)

func (e EntityDefaultEditViewType) ToPointer() *EntityDefaultEditViewType {
	return &e
}

func (e *EntityDefaultEditViewType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "default":
		*e = EntityDefaultEditViewType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityDefaultEditViewType: %v", v)
	}
}

type EntityDefaultEdit struct {
	SearchParams     map[string]string                  `json:"search_params,omitempty"`
	TableMenuOptions *EntityDefaultEditTableMenuOptions `json:"table_menu_options,omitempty"`
	ViewType         *EntityDefaultEditViewType         `json:"view_type,omitempty"`
}

func (o *EntityDefaultEdit) GetSearchParams() map[string]string {
	if o == nil {
		return nil
	}
	return o.SearchParams
}

func (o *EntityDefaultEdit) GetTableMenuOptions() *EntityDefaultEditTableMenuOptions {
	if o == nil {
		return nil
	}
	return o.TableMenuOptions
}

func (o *EntityDefaultEdit) GetViewType() *EntityDefaultEditViewType {
	if o == nil {
		return nil
	}
	return o.ViewType
}
