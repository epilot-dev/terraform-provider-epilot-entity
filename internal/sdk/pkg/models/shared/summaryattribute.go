// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// SummaryAttribute - Represents an expanded version of an attribute to be displayed in the list item summary.
// This configuration can be used in the following way:
// ```js
//
//	{
//	  "label": "Price components"
//	  "value": "{{item.prices.length}} price components"
//	  "show_as_tag": true
//	  "render_condition": "is_composite_price = "true""
//	}
//
// ```
// The value field supports handlebar expressions from which you can pick any field from the entity state.
type SummaryAttribute struct {
	// Binds summary field visibility to the feature flag state.
	FeatureFlag *string `json:"feature_flag,omitempty"`
	// Label to be shown on the top of the value.
	Label string `json:"label"`
	// Defines the conditional rendering expression for showing this field.
	// When a valid expression is parsed, their evaluation defines the visibility of this attribute.
	// Note: Empty or invalid expression have no effect on the field visibility.
	//
	RenderCondition *string `json:"render_condition,omitempty"`
	// Binds summary field visibility to the setting flag state.
	SettingFlag *string `json:"setting_flag,omitempty"`
	// Displays the value within a tag chip.
	ShowAsTag *bool `json:"show_as_tag,omitempty"`
	// CSS hex color or CSS color name for the tag chip.
	TagColor *string `json:"tag_color,omitempty"`
	// A static value or an handlebar expression.
	Value string `json:"value"`
}

func (o *SummaryAttribute) GetFeatureFlag() *string {
	if o == nil {
		return nil
	}
	return o.FeatureFlag
}

func (o *SummaryAttribute) GetLabel() string {
	if o == nil {
		return ""
	}
	return o.Label
}

func (o *SummaryAttribute) GetRenderCondition() *string {
	if o == nil {
		return nil
	}
	return o.RenderCondition
}

func (o *SummaryAttribute) GetSettingFlag() *string {
	if o == nil {
		return nil
	}
	return o.SettingFlag
}

func (o *SummaryAttribute) GetShowAsTag() *bool {
	if o == nil {
		return nil
	}
	return o.ShowAsTag
}

func (o *SummaryAttribute) GetTagColor() *string {
	if o == nil {
		return nil
	}
	return o.TagColor
}

func (o *SummaryAttribute) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}
