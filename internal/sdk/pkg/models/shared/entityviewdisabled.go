// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EntityViewDisabledViewType string

const (
	EntityViewDisabledViewTypeDisabled EntityViewDisabledViewType = "disabled"
)

func (e EntityViewDisabledViewType) ToPointer() *EntityViewDisabledViewType {
	return &e
}

func (e *EntityViewDisabledViewType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		*e = EntityViewDisabledViewType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityViewDisabledViewType: %v", v)
	}
}

type EntityViewDisabled struct {
	ViewType *EntityViewDisabledViewType `json:"view_type,omitempty"`
}
